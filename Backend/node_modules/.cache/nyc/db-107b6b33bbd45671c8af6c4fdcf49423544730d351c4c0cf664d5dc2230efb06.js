function cov_19ygd99iu0(){var path="/home/azra/Desktop/TicketMS/Backend/db.js";var hash="c0178443e3a47397fbdb0b929c295b95da986439";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/azra/Desktop/TicketMS/Backend/db.js",statementMap:{"0":{start:{line:1,column:13},end:{line:1,column:32}},"1":{start:{line:3,column:13},end:{line:9,column:2}},"2":{start:{line:10,column:0},end:{line:10,column:20}}},fnMap:{},branchMap:{},s:{"0":0,"1":0,"2":0},f:{},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"c0178443e3a47397fbdb0b929c295b95da986439"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_19ygd99iu0=function(){return actualCoverage;};}return actualCoverage;}cov_19ygd99iu0();const Pool=(cov_19ygd99iu0().s[0]++,require("pg").Pool);const pool=(cov_19ygd99iu0().s[1]++,new Pool({user:'postgres',host:'localhost',database:'postgres',password:'azra123',port:5432}));cov_19ygd99iu0().s[2]++;module.exports=pool;// it('should update the ticket status if the request body is valid', async () => {
//     const ticketid = 1;
//     const updateData = {
//       status: 'resolved',
//     };
//     const res = await chai.request(app)
//       .put(`/tickets/${ticketid}`)
//       .send(updateData);
//     expect(res).to.have.status(200);
//     expect(res.body).to.have.property('message').to.eql('Ticket updated successfully');
//     // Verify that the ticket status was updated
//     const updatedTicket = await Ticket.findOne({ _id: ticketid });
//     expect(updatedTicket.status).to.eql('resolved');
//   });
//   it('should return a 500 error if the update operation fails', async () => {
//     const ticketid = 1;
//     const updateData = {
//       status: 'in progress',
//     };
//     // Simulate a database error by spying on the Ticket model's updateOne method and throwing an error
//     chai.spy.on(Ticket, 'updateOne', () => { throw new Error('Database error') });
//     const res = await chai.request(app)
//       .put(`/tickets/${ticketid}`)
//       .send(updateData);
//     expect(res).to.have.status(500);
//     expect(res.body).to.have.property('message').to.eql('Failed to update ticket');
//   });
//   it('should return a 500 error if the update operation fails', async () => {
//     const ticketid = 1;
//     const updateData = {
//       status: 'in progress',
//     };
//     // Simulate a database error by spying on the Ticket model's updateOne method and throwing an error
//     chai.spy.on(Ticket, 'updateOne', () => { throw new Error('Database error') });
//     const res = await chai.request(app)
//       .put(`/tickets/${ticketid}`)
//       .send(updateData);
//     expect(res).to.have.status(500);
//     expect(res.body).to.have.property('message').to.eql('Failed to update ticket');
//   });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMTl5Z2Q5OWl1MCIsImFjdHVhbENvdmVyYWdlIiwiUG9vbCIsInMiLCJyZXF1aXJlIiwicG9vbCIsInVzZXIiLCJob3N0IiwiZGF0YWJhc2UiLCJwYXNzd29yZCIsInBvcnQiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiZGIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgUG9vbCA9IHJlcXVpcmUgKFwicGdcIikuUG9vbDtcblxuY29uc3QgcG9vbCA9IG5ldyBQb29sKHtcbiAgICB1c2VyOiAncG9zdGdyZXMnLFxuICAgIGhvc3Q6ICdsb2NhbGhvc3QnLFxuICAgIGRhdGFiYXNlOiAncG9zdGdyZXMnLFxuICAgIHBhc3N3b3JkOiAnYXpyYTEyMycsXG4gICAgcG9ydDogNTQzMlxufSk7XG5tb2R1bGUuZXhwb3J0cz1wb29sO1xuXG5cbi8vIGl0KCdzaG91bGQgdXBkYXRlIHRoZSB0aWNrZXQgc3RhdHVzIGlmIHRoZSByZXF1ZXN0IGJvZHkgaXMgdmFsaWQnLCBhc3luYyAoKSA9PiB7XG4vLyAgICAgY29uc3QgdGlja2V0aWQgPSAxO1xuLy8gICAgIGNvbnN0IHVwZGF0ZURhdGEgPSB7XG4vLyAgICAgICBzdGF0dXM6ICdyZXNvbHZlZCcsXG4vLyAgICAgfTtcbi8vICAgICBjb25zdCByZXMgPSBhd2FpdCBjaGFpLnJlcXVlc3QoYXBwKVxuLy8gICAgICAgLnB1dChgL3RpY2tldHMvJHt0aWNrZXRpZH1gKVxuLy8gICAgICAgLnNlbmQodXBkYXRlRGF0YSk7XG4vLyAgICAgZXhwZWN0KHJlcykudG8uaGF2ZS5zdGF0dXMoMjAwKTtcbi8vICAgICBleHBlY3QocmVzLmJvZHkpLnRvLmhhdmUucHJvcGVydHkoJ21lc3NhZ2UnKS50by5lcWwoJ1RpY2tldCB1cGRhdGVkIHN1Y2Nlc3NmdWxseScpO1xuLy8gICAgIC8vIFZlcmlmeSB0aGF0IHRoZSB0aWNrZXQgc3RhdHVzIHdhcyB1cGRhdGVkXG4vLyAgICAgY29uc3QgdXBkYXRlZFRpY2tldCA9IGF3YWl0IFRpY2tldC5maW5kT25lKHsgX2lkOiB0aWNrZXRpZCB9KTtcbi8vICAgICBleHBlY3QodXBkYXRlZFRpY2tldC5zdGF0dXMpLnRvLmVxbCgncmVzb2x2ZWQnKTtcbi8vICAgfSk7XG5cbi8vICAgaXQoJ3Nob3VsZCByZXR1cm4gYSA1MDAgZXJyb3IgaWYgdGhlIHVwZGF0ZSBvcGVyYXRpb24gZmFpbHMnLCBhc3luYyAoKSA9PiB7XG4vLyAgICAgY29uc3QgdGlja2V0aWQgPSAxO1xuLy8gICAgIGNvbnN0IHVwZGF0ZURhdGEgPSB7XG4vLyAgICAgICBzdGF0dXM6ICdpbiBwcm9ncmVzcycsXG4vLyAgICAgfTtcbi8vICAgICAvLyBTaW11bGF0ZSBhIGRhdGFiYXNlIGVycm9yIGJ5IHNweWluZyBvbiB0aGUgVGlja2V0IG1vZGVsJ3MgdXBkYXRlT25lIG1ldGhvZCBhbmQgdGhyb3dpbmcgYW4gZXJyb3Jcbi8vICAgICBjaGFpLnNweS5vbihUaWNrZXQsICd1cGRhdGVPbmUnLCAoKSA9PiB7IHRocm93IG5ldyBFcnJvcignRGF0YWJhc2UgZXJyb3InKSB9KTtcbi8vICAgICBjb25zdCByZXMgPSBhd2FpdCBjaGFpLnJlcXVlc3QoYXBwKVxuLy8gICAgICAgLnB1dChgL3RpY2tldHMvJHt0aWNrZXRpZH1gKVxuLy8gICAgICAgLnNlbmQodXBkYXRlRGF0YSk7XG4vLyAgICAgZXhwZWN0KHJlcykudG8uaGF2ZS5zdGF0dXMoNTAwKTtcbi8vICAgICBleHBlY3QocmVzLmJvZHkpLnRvLmhhdmUucHJvcGVydHkoJ21lc3NhZ2UnKS50by5lcWwoJ0ZhaWxlZCB0byB1cGRhdGUgdGlja2V0Jyk7XG4vLyAgIH0pO1xuLy8gICBpdCgnc2hvdWxkIHJldHVybiBhIDUwMCBlcnJvciBpZiB0aGUgdXBkYXRlIG9wZXJhdGlvbiBmYWlscycsIGFzeW5jICgpID0+IHtcbi8vICAgICBjb25zdCB0aWNrZXRpZCA9IDE7XG4vLyAgICAgY29uc3QgdXBkYXRlRGF0YSA9IHtcbi8vICAgICAgIHN0YXR1czogJ2luIHByb2dyZXNzJyxcbi8vICAgICB9O1xuLy8gICAgIC8vIFNpbXVsYXRlIGEgZGF0YWJhc2UgZXJyb3IgYnkgc3B5aW5nIG9uIHRoZSBUaWNrZXQgbW9kZWwncyB1cGRhdGVPbmUgbWV0aG9kIGFuZCB0aHJvd2luZyBhbiBlcnJvclxuLy8gICAgIGNoYWkuc3B5Lm9uKFRpY2tldCwgJ3VwZGF0ZU9uZScsICgpID0+IHsgdGhyb3cgbmV3IEVycm9yKCdEYXRhYmFzZSBlcnJvcicpIH0pO1xuLy8gICAgIGNvbnN0IHJlcyA9IGF3YWl0IGNoYWkucmVxdWVzdChhcHApXG4vLyAgICAgICAucHV0KGAvdGlja2V0cy8ke3RpY2tldGlkfWApXG4vLyAgICAgICAuc2VuZCh1cGRhdGVEYXRhKTtcbi8vICAgICBleHBlY3QocmVzKS50by5oYXZlLnN0YXR1cyg1MDApO1xuLy8gICAgIGV4cGVjdChyZXMuYm9keSkudG8uaGF2ZS5wcm9wZXJ0eSgnbWVzc2FnZScpLnRvLmVxbCgnRmFpbGVkIHRvIHVwZGF0ZSB0aWNrZXQnKTtcbi8vICAgfSk7XG4gIFxuXG5cblxuIl0sIm1hcHBpbmdzIjoib3ZCQWVZO0FBQUFBLGNBQUEsU0FBQUEsQ0FBQSxTQUFBQyxjQUFBLFdBQUFBLGNBQUEsRUFBQUQsY0FBQSxHQWZaLEtBQU0sQ0FBQUUsSUFBSSxFQUFBRixjQUFBLEdBQUFHLENBQUEsTUFBR0MsT0FBTyxDQUFFLElBQUksQ0FBQyxDQUFDRixJQUFJLEVBRWhDLEtBQU0sQ0FBQUcsSUFBSSxFQUFBTCxjQUFBLEdBQUFHLENBQUEsTUFBRyxHQUFJLENBQUFELElBQUksQ0FBQyxDQUNsQkksSUFBSSxDQUFFLFVBQVUsQ0FDaEJDLElBQUksQ0FBRSxXQUFXLENBQ2pCQyxRQUFRLENBQUUsVUFBVSxDQUNwQkMsUUFBUSxDQUFFLFNBQVMsQ0FDbkJDLElBQUksQ0FBRSxJQUNWLENBQUMsQ0FBQyxFQUFDVixjQUFBLEdBQUFHLENBQUEsTUFDSFEsTUFBTSxDQUFDQyxPQUFPLENBQUNQLElBQUksQ0FHbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EifQ==