function cov_19ygd99iu0(){var path="/home/azra/Desktop/TicketMS/Backend/db.js";var hash="c0178443e3a47397fbdb0b929c295b95da986439";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/azra/Desktop/TicketMS/Backend/db.js",statementMap:{"0":{start:{line:1,column:13},end:{line:1,column:32}},"1":{start:{line:3,column:13},end:{line:9,column:2}},"2":{start:{line:10,column:0},end:{line:10,column:20}}},fnMap:{},branchMap:{},s:{"0":0,"1":0,"2":0},f:{},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"c0178443e3a47397fbdb0b929c295b95da986439"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_19ygd99iu0=function(){return actualCoverage;};}return actualCoverage;}cov_19ygd99iu0();const Pool=(cov_19ygd99iu0().s[0]++,require("pg").Pool);const pool=(cov_19ygd99iu0().s[1]++,new Pool({user:'postgres',host:'localhost',database:'postgres',password:'azra123',port:5432}));cov_19ygd99iu0().s[2]++;module.exports=pool;// it('should retrieve tickets filtered by title and description', async () => {
//     const title = 'New ticket';
//     const description = 'This is new ticket';
//     const ticketData1 = [
//       { ticketid: 1, title: 'New ticket', description: 'This is new ticket' },
//     ];
//     const ticketData2 = [
//       { ticketid: 2, title: 'Another ticket', description: 'This is another ticket' },
//     ];
//     const spy = chai.spy.on(pool, 'query', () => ({ rows: ticketData1 }));
//     const res = await chai
//       .request(app)
//       .get(`/tickets?title=${title}&description=${description}`);      
//     expect(res).to.have.status(200);
//     expect(res.body).to.deep.equal(ticketData1);
//     chai.spy.restore();
//   });
// it('should retrieve tickets filtered by title', async () => {
//     const title = 'New ticket';
//     const ticketData1 = [
//       { ticketid: 1, title: 'New ticket', description: 'This is new ticket' },
//     ];
//     const ticketData2 = [
//       { ticketid: 2, title: 'Another ticket', description: 'This is another ticket' },
//     ];
//     const spy = chai.spy.on(pool, 'query', () => ({ rows: ticketData }));
//     const res = await chai.request(app).get(`/tickets?title=${title}`);
//     expect(res).to.have.status(200);
//     expect(res.body).to.deep.equal(ticketData1);
//     chai.spy.restore();
//   });
//   it('should retrieve tickets filtered by description', async () => {
//     const description = 'This is new ticket';
//     const ticketData1 = [
//       { ticketid: 1, title: 'New ticket', description: 'This is new ticket' },
//     ];
//     const ticketData2 = [
//       { ticketid: 2, title: 'Another ticket', description: 'This is another ticket' },
//     ];
//     const spy = chai.spy.on(pool, 'query', () => ({ rows: ticketData1 }));
//     const res = await chai.request(app).get(`/tickets?description=${description}`);
//     expect(res).to.have.status(200);
//     expect(res.body).to.deep.equal(ticketData1);
//     chai.spy.restore();
//   });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMTl5Z2Q5OWl1MCIsImFjdHVhbENvdmVyYWdlIiwiUG9vbCIsInMiLCJyZXF1aXJlIiwicG9vbCIsInVzZXIiLCJob3N0IiwiZGF0YWJhc2UiLCJwYXNzd29yZCIsInBvcnQiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiZGIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgUG9vbCA9IHJlcXVpcmUgKFwicGdcIikuUG9vbDtcblxuY29uc3QgcG9vbCA9IG5ldyBQb29sKHtcbiAgICB1c2VyOiAncG9zdGdyZXMnLFxuICAgIGhvc3Q6ICdsb2NhbGhvc3QnLFxuICAgIGRhdGFiYXNlOiAncG9zdGdyZXMnLFxuICAgIHBhc3N3b3JkOiAnYXpyYTEyMycsXG4gICAgcG9ydDogNTQzMlxufSk7XG5tb2R1bGUuZXhwb3J0cz1wb29sO1xuXG5cbi8vIGl0KCdzaG91bGQgcmV0cmlldmUgdGlja2V0cyBmaWx0ZXJlZCBieSB0aXRsZSBhbmQgZGVzY3JpcHRpb24nLCBhc3luYyAoKSA9PiB7XG4vLyAgICAgY29uc3QgdGl0bGUgPSAnTmV3IHRpY2tldCc7XG4vLyAgICAgY29uc3QgZGVzY3JpcHRpb24gPSAnVGhpcyBpcyBuZXcgdGlja2V0Jztcbi8vICAgICBjb25zdCB0aWNrZXREYXRhMSA9IFtcbi8vICAgICAgIHsgdGlja2V0aWQ6IDEsIHRpdGxlOiAnTmV3IHRpY2tldCcsIGRlc2NyaXB0aW9uOiAnVGhpcyBpcyBuZXcgdGlja2V0JyB9LFxuLy8gICAgIF07XG4vLyAgICAgY29uc3QgdGlja2V0RGF0YTIgPSBbXG4vLyAgICAgICB7IHRpY2tldGlkOiAyLCB0aXRsZTogJ0Fub3RoZXIgdGlja2V0JywgZGVzY3JpcHRpb246ICdUaGlzIGlzIGFub3RoZXIgdGlja2V0JyB9LFxuXG4vLyAgICAgXTtcbi8vICAgICBjb25zdCBzcHkgPSBjaGFpLnNweS5vbihwb29sLCAncXVlcnknLCAoKSA9PiAoeyByb3dzOiB0aWNrZXREYXRhMSB9KSk7XG5cbi8vICAgICBjb25zdCByZXMgPSBhd2FpdCBjaGFpXG4vLyAgICAgICAucmVxdWVzdChhcHApXG4vLyAgICAgICAuZ2V0KGAvdGlja2V0cz90aXRsZT0ke3RpdGxlfSZkZXNjcmlwdGlvbj0ke2Rlc2NyaXB0aW9ufWApOyAgICAgIFxuLy8gICAgIGV4cGVjdChyZXMpLnRvLmhhdmUuc3RhdHVzKDIwMCk7XG4vLyAgICAgZXhwZWN0KHJlcy5ib2R5KS50by5kZWVwLmVxdWFsKHRpY2tldERhdGExKTtcbi8vICAgICBjaGFpLnNweS5yZXN0b3JlKCk7XG4gIFxuLy8gICB9KTtcblxuXG4vLyBpdCgnc2hvdWxkIHJldHJpZXZlIHRpY2tldHMgZmlsdGVyZWQgYnkgdGl0bGUnLCBhc3luYyAoKSA9PiB7XG4vLyAgICAgY29uc3QgdGl0bGUgPSAnTmV3IHRpY2tldCc7XG4vLyAgICAgY29uc3QgdGlja2V0RGF0YTEgPSBbXG4vLyAgICAgICB7IHRpY2tldGlkOiAxLCB0aXRsZTogJ05ldyB0aWNrZXQnLCBkZXNjcmlwdGlvbjogJ1RoaXMgaXMgbmV3IHRpY2tldCcgfSxcbi8vICAgICBdO1xuLy8gICAgIGNvbnN0IHRpY2tldERhdGEyID0gW1xuLy8gICAgICAgeyB0aWNrZXRpZDogMiwgdGl0bGU6ICdBbm90aGVyIHRpY2tldCcsIGRlc2NyaXB0aW9uOiAnVGhpcyBpcyBhbm90aGVyIHRpY2tldCcgfSxcblxuLy8gICAgIF07XG4vLyAgICAgY29uc3Qgc3B5ID0gY2hhaS5zcHkub24ocG9vbCwgJ3F1ZXJ5JywgKCkgPT4gKHsgcm93czogdGlja2V0RGF0YSB9KSk7XG5cbi8vICAgICBjb25zdCByZXMgPSBhd2FpdCBjaGFpLnJlcXVlc3QoYXBwKS5nZXQoYC90aWNrZXRzP3RpdGxlPSR7dGl0bGV9YCk7XG5cbi8vICAgICBleHBlY3QocmVzKS50by5oYXZlLnN0YXR1cygyMDApO1xuLy8gICAgIGV4cGVjdChyZXMuYm9keSkudG8uZGVlcC5lcXVhbCh0aWNrZXREYXRhMSk7XG4vLyAgICAgY2hhaS5zcHkucmVzdG9yZSgpO1xuLy8gICB9KTtcblxuLy8gICBpdCgnc2hvdWxkIHJldHJpZXZlIHRpY2tldHMgZmlsdGVyZWQgYnkgZGVzY3JpcHRpb24nLCBhc3luYyAoKSA9PiB7XG4vLyAgICAgY29uc3QgZGVzY3JpcHRpb24gPSAnVGhpcyBpcyBuZXcgdGlja2V0Jztcbi8vICAgICBjb25zdCB0aWNrZXREYXRhMSA9IFtcbi8vICAgICAgIHsgdGlja2V0aWQ6IDEsIHRpdGxlOiAnTmV3IHRpY2tldCcsIGRlc2NyaXB0aW9uOiAnVGhpcyBpcyBuZXcgdGlja2V0JyB9LFxuLy8gICAgIF07XG4vLyAgICAgY29uc3QgdGlja2V0RGF0YTIgPSBbXG4vLyAgICAgICB7IHRpY2tldGlkOiAyLCB0aXRsZTogJ0Fub3RoZXIgdGlja2V0JywgZGVzY3JpcHRpb246ICdUaGlzIGlzIGFub3RoZXIgdGlja2V0JyB9LFxuXG4vLyAgICAgXTtcbi8vICAgICBjb25zdCBzcHkgPSBjaGFpLnNweS5vbihwb29sLCAncXVlcnknLCAoKSA9PiAoeyByb3dzOiB0aWNrZXREYXRhMSB9KSk7XG5cbi8vICAgICBjb25zdCByZXMgPSBhd2FpdCBjaGFpLnJlcXVlc3QoYXBwKS5nZXQoYC90aWNrZXRzP2Rlc2NyaXB0aW9uPSR7ZGVzY3JpcHRpb259YCk7XG5cbi8vICAgICBleHBlY3QocmVzKS50by5oYXZlLnN0YXR1cygyMDApO1xuLy8gICAgIGV4cGVjdChyZXMuYm9keSkudG8uZGVlcC5lcXVhbCh0aWNrZXREYXRhMSk7XG4vLyAgICAgY2hhaS5zcHkucmVzdG9yZSgpO1xuXG4vLyAgIH0pO1xuIl0sIm1hcHBpbmdzIjoib3ZCQWVZO0FBQUFBLGNBQUEsU0FBQUEsQ0FBQSxTQUFBQyxjQUFBLFdBQUFBLGNBQUEsRUFBQUQsY0FBQSxHQWZaLEtBQU0sQ0FBQUUsSUFBSSxFQUFBRixjQUFBLEdBQUFHLENBQUEsTUFBR0MsT0FBTyxDQUFFLElBQUksQ0FBQyxDQUFDRixJQUFJLEVBRWhDLEtBQU0sQ0FBQUcsSUFBSSxFQUFBTCxjQUFBLEdBQUFHLENBQUEsTUFBRyxHQUFJLENBQUFELElBQUksQ0FBQyxDQUNsQkksSUFBSSxDQUFFLFVBQVUsQ0FDaEJDLElBQUksQ0FBRSxXQUFXLENBQ2pCQyxRQUFRLENBQUUsVUFBVSxDQUNwQkMsUUFBUSxDQUFFLFNBQVMsQ0FDbkJDLElBQUksQ0FBRSxJQUNWLENBQUMsQ0FBQyxFQUFDVixjQUFBLEdBQUFHLENBQUEsTUFDSFEsTUFBTSxDQUFDQyxPQUFPLENBQUNQLElBQUksQ0FHbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUVBIn0=